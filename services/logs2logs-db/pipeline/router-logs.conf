input {
  udp {
    port => 5140
    type => syslog
    queue_size => 5000
    receive_buffer_bytes => 26214400
  }
  http {
    id => "http_input"
    user => "${LOGSTASH_USERNAME:username}"
    password => "${LOGSTASH_PASSWORD:password}"
  }
}

filter {
  grok {
    match => ["message", "(?:%{SYSLOGTIMESTAMP:syslog_timestamp}|%{TIMESTAMP_ISO8601:timestamp8601}) %{SYSLOGPROG}: %{HAPROXYHTTPBASE}"]
  }
  grok {
    match => ["captured_request_headers", "%{URIHOST:request_header_host}\|%{GREEDYDATA:request_header_useragent}"]
  }
  grok {
    match => ["backend_name", "%{NOTSPACE:haproxy_backend}:%{NOTSPACE:openshift_project}:%{NOTSPACE:openshift_route}"]
  }
  grok {
    match => ["server_name", "pod:%{NOTSPACE:openshift_pod}:%{NOTSPACE:openshift_service}:%{NOTSPACE:openshift_pod_ip}:%{NOTSPACE:openshift_pod_port}"]
  }
  if ![openshift_project] {
    mutate {
      add_field => { "openshift_project" => "noproject" }
    }
  }
}

output {
  elasticsearch {
    hosts => ["${ELASTICSEARCH_URL}"]
    index => "router-logs-%{[openshift_project]}-%{+YYYY.MM}"
    template => "/usr/share/logstash/templates/router-logs.json"
    template_name => "router-logs"
  }
}
